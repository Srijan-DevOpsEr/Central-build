name: Central Terraform Apply Pipeline

on:
  repository_dispatch:
    types: [pr_apply]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:
  terraform-format:
    name: Terraform Format
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: "${{ github.event.client_payload.triggered_by }}"
          ref: "${{ github.event.client_payload.branch }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 

      - name: Terraform Format
        run: terraform fmt -check -recursive

  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: "${{ github.event.client_payload.triggered_by }}"
          ref: "${{ github.event.client_payload.branch }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 

      - name: Terraform Validate
        run: terraform validate

  terraform-tfsec:
    name: Terraform TfSec Scanning
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: "${{ github.event.client_payload.triggered_by }}"
          ref: "${{ github.event.client_payload.branch }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

  terraform-checkov:
    name: Terraform Checkov Scanning
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: "${{ github.event.client_payload.triggered_by }}"
          ref: "${{ github.event.client_payload.branch }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init 

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: production
    needs: [terraform-format, terraform-validate, terraform-tfsec, terraform-checkov]
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: "${{ github.event.client_payload.triggered_by }}"
          ref: "${{ github.event.client_payload.branch }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Terraform Init
        run: terraform init

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply -auto-approve pr-plan.out
