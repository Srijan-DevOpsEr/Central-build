name: Orchestrate Build & Deploy

on:
  repository_dispatch:
    types: [dependency_updated]  # Custom event type triggered by child repo events

jobs:
  who-triggered-me:
    runs-on: ubuntu-latest
    steps:
      - name: Who triggered me?
        run: |
          echo "### This pipeline trigger summary ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "I was triggered by ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            echo "Triggered by: ${{ github.event.client_payload.triggered_by }}" >> $GITHUB_STEP_SUMMARY
            echo 'Repository Dispatch payload:' >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            echo '${{ toJson(github.event.client_payload) }}' | jq . >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger" >> $GITHUB_STEP_SUMMARY

  deploy_infrastructure:
    runs-on: ubuntu-22.04
    needs: who-triggered-me
    environment: production
    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan for Affected Resources
        run: |
          echo "Planning for affected resources..."
          if [ "${{ github.event.client_payload.resource }}" == "vm" ]; then
            terraform plan -out=tfplan.out -target=module.vm  # Target only the VM module if changes are detected in VM resources
          elif [ "${{ github.event.client_payload.resource }}" == "network" ]; then
            terraform plan -out=tfplan.out -target=module.network  # Target only the Network module if changes are detected in network resources
          else
            terraform plan -out=tfplan.out  # Default plan for all resources
          fi

      - name: Terraform Apply for Affected Resources
        run: |
          echo "Applying changes to affected resources..."
          terraform apply -auto-approve tfplan.out

